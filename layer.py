import numpy as np
from numpy import inf
import matplotlib.pyplot as plt

# Layer structure visualization

def visualize_layered_structure(n_list, d_list):
    """
    Visualizes a layered optical structure with refractive indices and layer thicknesses.
    Layers with n > 2 are lightgray, n <= 2 are lightblue.
    """
    # Remove air layers (n = 1, no imaginary part)
    filtered_layers = [(n, d) for n, d in zip(n_list, d_list) if np.real(n) != 1 or np.imag(n) != 0]
    n_list, d_list = zip(*filtered_layers) if filtered_layers else ([], [])

    # Convert nm to µm
    d_list = [d / 1000 for d in d_list]

    # Define colors based on real refractive index
    colors = ['lightgray' if np.real(n) > 2 else 'lightblue' for n in n_list]

    # Compute layer positions
    x_pos = np.cumsum([0] + list(d_list[:-1]))
    total_thickness = sum(d for d in d_list if np.isfinite(d))

    # Plot
    fig, ax = plt.subplots(figsize=(10, 4))
    for i in range(len(d_list)):
        ax.fill_betweenx([-1, 1], x_pos[i], x_pos[i] + d_list[i], color=colors[i], edgecolor='black')

    # Legend
    legend_patches = [
        plt.Rectangle((0, 0), 1, 1, fc='lightgray', edgecolor='black', label='a-Si'),
        plt.Rectangle((0, 0), 1, 1, fc='lightblue', edgecolor='black', label='SiO_2')
    ]
    ax.legend(handles=legend_patches, loc='upper right',prop={'size':12})

    ax.set_ylim(-1, 1)
    ax.set_xlim(0, total_thickness)
    ax.set_xlabel("Depth (µm)" ,fontsize=14)
    ax.set_title(f"Optimized Structure Profile (Total Thickness: {total_thickness:.2f} µm)",fontsize=16)
    ax.yaxis.set_visible(False)

    # Depth ticks every 2 µm
    tick_positions = np.arange(0, min(total_thickness, 12), 2)
    ax.tick_params(axis='x',labelsize=12)
    ax.set_xticks(tick_positions)
    ax.set_xticklabels([f"{tick:.1f} µm" for tick in tick_positions])

    plt.tight_layout()
    plt.show()

# --- 굴절률 리스트 생성 함수 ---
def alternating_n_list(N):
    n1, n2 = 3.6211 + 1.26e-7j, 1.4596 + 0.000011139j
    n_list = [1]  # 시작: 공기
    for i in range(N):
        n_list.append(n1 if i % 2 == 0 else n2)
    n_list.append(1)  # 끝: 공기
    return n_list

# --- d_list는 그대로 사용 ---
d_list=[inf,1003.9639492503578,
    651.2205306863036,
    859.3947027370344,
    47.69489234842534,
    1156.2636621549727,
    172.88105439406763,
    206.4204327632203,
    287.0535658672324,
    714.9138697371925,
    584.1832470766259,
    464.7171593767959,
    443.1819085848536,
    87.80663477252112,
    238.23164426140025,
    70.84646055850789,
    263.1795728427364,
    448.7244025720875,
    242.9946644007458,
    592.54592114202,
    35.7389001762981,
    268.3522702375879,
    100.2984029607315,
    616.4013064823745,
    159.07655896051077,
    35.92805771311923,inf]
#d_list=[inf,49.143651945810504, 536.882307119312, 105.24314733950406, 169.5088325174053, 475.1314771815507, 77.07129162421421, 21.807942703825876, 566.6378909358161, 273.92552501336144, 471.4474002879336, 134.8483393810398, 1012.5839483511772, 380.29335195480627, 526.0645407809182, 126.05194422454302, 298.3602422323708, 503.0534722962362, 419.2858269834802, 160.0407992505991, 374.2942091245844, 365.12320686528824, 619.1993534207637, 587.3983080951249, 347.7679206749738, 310.30467001739436,inf]
#d_list=[inf,130.0035999614746, 81.91472366364566, 196.36872797138605, 69.05360501679925, 118.82172274528278, 981.3830791874619, 841.523438901921, 142.35122755359396, 55.119225709215165, 994.0225495192325, 1104.355784541785, 538.3800476443109, 265.1353830004555, 230.9180569023259, 168.40555682638302, 540.9612545845471, 1073.9728726752803, 159.0560542789594, 586.6045127152552, 68.23359998273511, 467.78305009593737, 72.90885102489662, 620.5908129657466, 82.65252368713712, 158.59258877003083,inf]
#d_list = [inf, 1151.6542988798471, 409.2820844646449, 467.01300990938125, 643.333873853947, 913.805151694181, 293.54998105264224, 966.250331113894, 150.53612720225883, 378.57268461437053, 32.87238976003445, 125.8367133760612, 354.620185120285, 669.1987409749291, 135.99006721960905, 667.4415443223498, 935.9016870235196, 131.6641500811474, 47.18530451874684, 209.942299755174, 81.02237631974381, 25.49015126772965, 41.273405108451286, 530.6137756736028, 192.60543707640406, 82.65872581424239, inf]

# --- n_list 생성 ---

# --- n_list 생성 ---
num_layers = len(d_list) - 2
n_list = alternating_n_list(num_layers)

# Example Data
#n_list=[1, 3.6211 + 1.26e-7j, 1.4596+0.000011139j, 3.6211 + 1.26e-7j, 1.4596+0.000011139j, 3.6211 + 1.26e-7j, 1.4596+0.000011139j,
#          3.6211 + 1.26e-7j, 1.4596+0.000011139j, 3.6211 + 1.26e-7j, 1.4596+0.000011139j, 3.6211 + 1.26e-7j, 1.4596+0.000011139j,
#          3.6211 + 1.26e-7j, 1.4596+0.000011139j, 3.6211 + 1.26e-7j, 1.4596+0.000011139j, 3.6211 + 1.26e-7j, 1.4596+0.000011139j,
#          3.6211 + 1.26e-7j, 1.4596+0.000011139j, 3.6211 + 1.26e-7j, 1.4596+0.000011139j, 3.6211 + 1.26e-7j,
#          1.4596+0.000011139j, 3.6211 + 1.26e-7j, 1.4596+0.000011139j, 3.6211 + 1.26e-7j, 1.4596+0.000011139j, 3.6211 + 1.26e-7j, 1.4596+0.000011139j,3.6211 + 1.26e-7j, 1]
#d_list=[np.inf,254.62233067896395, 43.02510995398633, 216.87336822145835, 37.99081756514539, 1163.1542959979133, 264.3913882942826, 134.81391983982348, 910.9256146805259, 438.2502439805104, 591.6141983073821, 113.63471656143736, 284.5943743497452, 661.2609872422457, 759.4633537008151, 74.4861815656685, 400.8500302221796, 627.2966554944356, 731.7813403940688, 242.17021970942216, 57.46249327109048, 955.5468754871812, 487.7625687174306, 460.02851937906684, 79.4315775523524, 615.8518395775743, 225.11011436374213, 62.71364863176034, 230.62038020462415, 53.11886226587625, 75.7100670043406, 144.58832611912956,np.inf]

# Visualize the structure
visualize_layered_structure(n_list, d_list)




#d_list = [np.inf,42.94222185021348, 97.04061315621708, 180.7037299968157, 37.471419549935646, 24.377519223272987, 45.30958595195251, 237.09498335709807, 76.2014166003697, 227.39423043773883, 110.22044938658712, 31.184269590101145, 406.8592094300316, 126.6153136385591, 297.20752919831205, 80.38859640209516, 395.2958848225455, 22.324506651539565, 125.64915616262175, 257.4934308936667, 30.978590725421686, 113.01547059028826, 464.28952752155845, 232.9805047918714, 34.47776323035872, 165.32247176629934, 207.79190133445326, 10.459024578615562, 252.03539992513765, 214.51313445279445, 97.63808884913318, np.inf]